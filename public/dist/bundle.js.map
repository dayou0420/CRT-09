{"version":3,"file":"bundle.js","mappings":";;;;;;;AAAA;;EAEE;AACF,+CAA+C;AAC/C,uBAAuB;AACvB,MAAM,OAAO,GAAG,IAAI,OAAO,CAAS,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;IACpD,UAAU,CAAC,GAAG,EAAE;QACZ,OAAO,CAAC,SAAS,CAAC,CAAC;IACvB,CAAC,EAAE,IAAI,CAAC,CAAC;AACb,CAAC,CAAC,CAAC;AACH,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;IAChB,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC;AACH;;EAEE;AACF,SAAS,KAAK,CAAqC,IAAO,EAAE,IAAO;IAC/D,OAAO,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AACrC,CAAC;AACD,MAAM,SAAS,GAAG,KAAK,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,CAAC;AAQ3E,SAAS,gBAAgB,CAAoB,OAAU;IACnD,IAAI,eAAe,GAAG,UAAU,CAAC;IACjC,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;QACpB,eAAe,GAAG,IAAI,GAAG,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC;KACpD;IACD,OAAO,CAAC,OAAO,EAAE,eAAe,CAAC,CAAC;AACtC,CAAC;AACD,wDAAwD;AACxD;;EAEE;AACF,SAAS,iBAAiB,CAAsC,GAAM,EAAE,GAAM;IAC1E,OAAO,SAAS,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;AAChC,CAAC;AACD,iBAAiB,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,MAAM,CAAC,CAAC;AAC3C;;EAEE;AACF,MAAM,WAAW;IAAjB;QACY,SAAI,GAAQ,EAAE,CAAC;IAa3B,CAAC;IAZG,OAAO,CAAC,IAAO;QACX,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACzB,CAAC;IACD,UAAU,CAAC,IAAO;QACd,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;YAChC,OAAO;SACV;QACD,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK;IACvD,CAAC;IACD,QAAQ;QACJ,OAAO,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;IAC1B,CAAC;CACJ;AACD,MAAM,WAAW,GAAG,IAAI,WAAW,EAAU,CAAC;AAC9C,WAAW,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;AAC7B,WAAW,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;AAC7B,WAAW,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;AAChC,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,CAAC;AACpC,MAAM,aAAa,GAAG,IAAI,WAAW,EAAU,CAAC;AAehD,SAAS,gBAAgB,CACrB,KAAa,EAAE,WAAmB,EAAE,IAAU;IAE9C,IAAI,UAAU,GAAwB,EAAE,CAAC;IACzC,UAAU,CAAC,KAAK,GAAG,KAAK,CAAC;IACzB,UAAU,CAAC,WAAW,GAAG,WAAW,CAAC;IACrC,UAAU,CAAC,aAAa,GAAG,IAAI,CAAC;IAChC,OAAO,UAAwB,CAAC;AACpC,CAAC;AACD,MAAM,KAAK,GAAuB,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;AACnD,sBAAsB;AACtB,eAAe","sources":["webpack://src/./src/app.ts"],"sourcesContent":["/***\n * 94\n*/\n// const names: Array<string> = []; // string[]\n// names[0].split(' ');\nconst promise = new Promise<string>((resolve, reject) => {\n    setTimeout(() => {\n        resolve('終わりました！');\n    }, 2000);\n});\npromise.then(data => {\n    data.split(' ');\n});\n/***\n * 95, 96\n*/\nfunction merge<T extends object, U extends object>(objA: T, objB: U) {\n    return Object.assign(objA, objB);\n}\nconst mergedObj = merge({ name: 'Max', hobbies: ['Sports'] }, { age: 30 });\n// console.log(mergedObj);\n/***\n * 97\n*/\ninterface lengthy {\n    length: number;\n}\nfunction countAndDescribe<T extends lengthy>(element: T): [T, string] {\n    let descriptionText = '値がありません。';\n    if (element.length > 0) {\n        descriptionText = '値は' + element.length + '個です。';\n    }\n    return [element, descriptionText];\n}\n// console.log(countAndDescribe(['Sports', 'Cooking']));\n/***\n * 98\n*/\nfunction extractAndConvert<T extends Object, U extends keyof T>(obj: T, key: U) {\n    return 'Value: ' + obj[key];\n}\nextractAndConvert({ name: 'Max' }, 'name');\n/***\n * 99, 102\n*/\nclass DataStorage<T extends string | number | boolean> {\n    private data: T[] = [];\n    addItem(item: T) {\n        this.data.push(item);\n    }\n    removeItem(item: T) {\n        if (this.data.indexOf(item) === -1) {\n            return;\n        }\n        this.data.splice(this.data.indexOf(item), 1); // -1\n    }\n    getItems() {\n        return [...this.data];\n    }\n}\nconst textStorage = new DataStorage<string>();\ntextStorage.addItem('Data1');\ntextStorage.addItem('Data2');\ntextStorage.removeItem('Data1');\nconsole.log(textStorage.getItems());\nconst numberStorage = new DataStorage<number>();\n// const objStorage = new DataStorage<object>();\n// const obj = { name: 'Max' };\n// objStorage.addItem(obj);\n// objStorage.addItem({ name: 'Manu' });\n// objStorage.removeItem(obj);\n// console.log(objStorage.getItems());\n/***\n * 101\n*/\ninterface CourceGoal {\n    title: string;\n    description: string;\n    completeUntil: Date;\n}\nfunction createCourceGoal(\n    title: string, description: string, date: Date\n): CourceGoal {\n    let courceGoal: Partial<CourceGoal> = {};\n    courceGoal.title = title;\n    courceGoal.description = description;\n    courceGoal.completeUntil = date;\n    return courceGoal as CourceGoal;\n}\nconst names: Readonly<string[]> = ['Max', 'Annna'];\n// names.push('Manu');\n// names.pop();\n"],"names":[],"sourceRoot":""}