{"version":3,"file":"bundle.js","mappings":";;;;;;;AAAA;;EAEE;AACF,SAAS,GAAG,CAAC,EAAU,EAAE,EAAU;IAC/B,OAAO,EAAE,GAAG,EAAE,CAAC;AACnB,CAAC;AACD,SAAS,WAAW,CAAC,GAAW;IAC5B,OAAO,CAAC,GAAG,CAAC,UAAU,GAAG,GAAG,CAAC,CAAC;AAClC,CAAC;AACD,IAAI,aAA+C,CAAC;AACpD,aAAa,GAAG,GAAG,CAAC;AACpB,qBAAqB;AACrB,+BAA+B;AAC/B,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACjC,WAAW,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;AAMxB;;EAEE;AACF,SAAS,OAAO,CACZ,MAAkB,EAClB,MAAkB,EAClB,gBAAsC;IAEtC,IAAI,MAAM,CAAC;IACX,IAAI,OAAO,MAAM,KAAK,QAAQ,IAAI,OAAO,MAAM,KAAK,QAAQ;QACxD,gBAAgB,KAAK,WAAW,EAClC;QACE,MAAM,GAAG,CAAC,MAAM,GAAG,CAAC,MAAM,CAAC;KAC9B;SAAM;QACH,MAAM,GAAG,MAAM,CAAC,QAAQ,EAAE,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;KAClD;IACD,OAAO,MAAM,CAAC;IACd,0CAA0C;IAC1C,sBAAsB;IACtB,WAAW;IACX,gCAAgC;IAChC,IAAI;AACR,CAAC;AACD,MAAM,YAAY,GAAG,OAAO,CAAC,EAAE,EAAE,EAAE,EAAE,WAAW,CAAC,CAAC;AAClD,6BAA6B;AAC7B,MAAM,kBAAkB,GAAG,OAAO,CAAC,IAAI,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC;AAC5D,mCAAmC;AACnC,MAAM,aAAa,GAAG,OAAO,CAAC,KAAK,EAAE,MAAM,EAAE,SAAS,CAAC,CAAC;AACxD,8BAA8B;AAC9B;;EAEE;AACF,mBAAmB;AACnB,uBAAuB;AACvB,oBAAoB;AACpB,IAAK,IAIJ;AAJD,WAAK,IAAI;IACL,iCAAK;IACL,yCAAS;IACT,mCAAM;AACV,CAAC,EAJI,IAAI,KAAJ,IAAI,QAIR;AACD,MAAM,MAAM,GAAG;IACX,IAAI,EAAE,MAAM;IACZ,GAAG,EAAE,EAAE;IACP,OAAO,EAAE,CAAC,QAAQ,EAAE,SAAS,CAAC;IAC9B,IAAI,EAAE,IAAI,CAAC,KAAK;CACnB,CAAC;AACF,IAAI,MAAM,CAAC,IAAI,KAAK,IAAI,CAAC,KAAK,EAAE;IAC5B,yBAAyB;CAC5B;AACD;;EAEE;AACF,kBAAkB;AAClB,oBAAoB;AACpB,mBAAmB;AACnB,yBAAyB;AACzB,6BAA6B;AAC7B,QAAQ;AACR,oBAAoB;AACpB,eAAe;AACf,sCAAsC;AACtC,0BAA0B;AAC1B,KAAK;AACL,6BAA6B;AAC7B,uBAAuB;AACvB,sCAAsC;AACtC,uBAAuB;AACvB,IAAI,kBAA4B,CAAC;AACjC,kBAAkB,GAAG,CAAC,QAAQ,CAAC,CAAC;AAChC,KAAK,MAAM,OAAO,IAAI,MAAM,CAAC,OAAO,EAAE;IAClC,sCAAsC;CACzC;AACD;;EAEE;AACF,8EAA8E;AAC9E,iEAAiE;AACjE,8CAA8C;AAC9C,WAAW;AACX,8BAA8B;AAC9B,wBAAwB;AACxB,kCAAkC;AAClC,eAAe;AACf,yBAAyB;AACzB,QAAQ;AACR,IAAI;AACJ,IAAI,OAAO,CAAC;AACZ,OAAO,GAAG,CAAC,CAAC;AACZ,MAAM,OAAO,GAAG,GAAG,CAAC;AACpB,4BAA4B;AAC5B,mCAAmC;AACnC,oDAAoD","sources":["webpack://src/./src/app.ts"],"sourcesContent":["/***\n * 25, 26\n*/\nfunction add(n1: number, n2: number): number {\n    return n1 + n2;\n}\nfunction printResult(num: number): void {\n    console.log('Result: ' + num);\n}\nlet combineValues: (a: number, b: number) => number;\ncombineValues = add;\n// combineValues = 5;\n// combineValues = printResult;\nconsole.log(combineValues(8, 8));\nprintResult(add(5, 12));\n/***\n * 23\n*/\ntype Combinable = number | string;\ntype ConversionDescriptor = 'as-number' | 'as-text';\n/***\n * 21, 22\n*/\nfunction combine(\n    input1: Combinable,\n    input2: Combinable,\n    resultConversion: ConversionDescriptor\n) {\n    let result;\n    if (typeof input1 === 'number' && typeof input2 === 'number' ||\n        resultConversion === 'as-number'\n    ) {\n        result = +input1 + +input2;\n    } else {\n        result = input1.toString() + input2.toString();\n    }\n    return result;\n    // if (resultConversion === 'as-number') {\n    //     return +result;\n    // } else {\n    //     return result.toString();\n    // }\n}\nconst combinedAges = combine(30, 26, 'as-number');\n// console.log(combinedAges);\nconst combinedStringAges = combine('30', '26', 'as-number');\n// console.log(combinedStringAges);\nconst combinedNames = combine('Max', 'Anna', 'as-text');\n// console.log(combinedNames);\n/***\n * 19\n*/\n// const ADMIN = 0;\n// const READ_ONLY = 1;\n// const AUTHOR = 2;\nenum Role {\n    ADMIN,\n    READ_ONLY,\n    AUTHOR\n}\nconst person = {\n    name: 'yota',\n    age: 30,\n    hobbies: ['Sports', 'Cooking'],\n    role: Role.ADMIN\n};\nif (person.role === Role.ADMIN) {\n    // console.log('管理者ユーザ');\n}\n/***\n * 15, 17, 18, 20\n*/\n// const person: {\n//     name: string;\n//     age: number;\n//     hobbies: string[];\n//     role: [number, string]\n// } = {\n//     name: 'yota',\n//     age: 30,\n//     hobbies: ['Sports', 'Cooking'],\n//     role: [2, 'author']\n// };\n// person.role.push('admin');\n// person.role[1] = 10;\n// person.role = [0, 'admin', 'user'];\n// console.log(person);\nlet favoriteActivities: string[];\nfavoriteActivities = ['Sports'];\nfor (const hobbies of person.hobbies) {\n    // console.log(hobbies.toUpperCase());\n}\n/***\n * 10, 11, 12, 13, 14\n*/\n// function add(n1: number, n2: number, showResult: boolean, phrase: string) {\n//     // if (typeof n1 !== 'number' || typeof n2 !== 'number') {\n//     //     throw new Error('入力値が正しくありません');\n//     // }\n//     const result = n1 + n2;\n//     if (showResult) {\n//         return phrase + result;\n//     } else {\n//         return result;\n//     }\n// }\nlet number1;\nnumber1 = 5;\nconst number2 = 2.8;\n// const printResult = true;\n// const resultPhrase = 'Result: ';\n// add(number1, number2, printResult, resultPhrase);\n"],"names":[],"sourceRoot":""}