{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://src/./src/app.ts"],"sourcesContent":["/***\n * 59, 60, 62, 63, 64, 65, 66, 67, 68, 69\n*/\nabstract class Department {\n    static fiscalYear = 2020;\n    // private id: string;\n    // name: string;\n    protected employee: string[] = [];\n    static createEmployee(name: string) {\n        return { name: name };\n    }\n    constructor(protected readonly id: string, public name: string) {\n        // this.id = id;\n        // this.name = n;\n    }\n    abstract describe(this: Department): void;\n    addEmployee(employee: string) {\n        this.employee.push(employee);\n    }\n    printEmployeeInformation() {\n        console.log(this.employee.length);\n        console.log(this.employee);\n    }\n}\nclass ITDepartment extends Department {\n    admins: string[];\n    constructor(id: string, admins: string[]) {\n        super(id, 'IT');\n        this.admins = admins;\n    }\n    describe() {\n        console.log('IT部門 - ID' + this.id);\n    }\n}\nclass AccountingDepartment extends Department {\n    private lastReport: string;\n    private static instance: AccountingDepartment;\n    get mostRecentReport() {\n        if (this.lastReport) {\n            return this.lastReport;\n        }\n        throw new Error('レポートが見つかりません。');\n    }\n    set mostRecentReport(value: string) {\n        if (!value) {\n            throw new Error('正しい値を設定してください。');\n        }\n        this.addReport(value);\n    }\n    private constructor(id: string, private reports: string[]) {\n        super(id, 'Accounting');\n        this.lastReport = reports[0];\n    }\n    static getInstance() {\n        if (this.instance) {\n            return this.instance;\n        }\n        this.instance = new AccountingDepartment('d2', []);\n        return this.instance;\n    }\n    describe() {\n        console.log('会計部門 - ID: ' + this.id);\n    }\n    addReport(text: string) {\n        this.reports.push(text);\n        this.lastReport = text;\n    }\n    printReports() {\n        console.log(this.reports);\n    }\n    addEmployee(name: string) {\n        if (name === 'Max') {\n            return;\n        }\n        this.employee.push(name);\n    }\n}\nconst employee1 = Department.createEmployee('Max');\nconsole.log(employee1, Department.fiscalYear);\n// const it = new ITDepartment('d1', ['Max']);\n// it.addEmployee('Max');\n// it.addEmployee('Manu');\nconst accounting = AccountingDepartment.getInstance();\naccounting.mostRecentReport = '通期会計レポート';\naccounting.addReport('Something');\nconsole.log(accounting.mostRecentReport);\naccounting.addEmployee('Max');\naccounting.addEmployee('Manu');\naccounting.describe();\n// accounting.printReports();\n// accounting.printEmployeeInformation();\n// accounting.employee[2] = 'Anna';\n// accounting.name = 'NEW NAME';\n// it.describe();\n// it.printEmployeeInformation();\n// console.log(it);\n// const accountingCopy = { name: 'DUMMY', describe: accounting.describe };\n// accountingCopy.describe();\n/***\n * 53\n*/\n// const add = (...numbers: number[]) => {\n//     return numbers.reduce((curResult, curValue) => {\n//         return curResult + curValue;\n//     }, 0);\n// };\n// const addedNumbers = add(5, 10, 2, 3.7);\n// console.log(addedNumbers);\n/***\n * 52\n*/\n// const hobbies = ['Sports', 'Cooking'];\n// const activeHobbies = ['Hiking', ...hobbies];\n// activeHobbies.push(...hobbies);\n// const person = {\n//     firstName: 'Max',\n//     age: 30\n// };\n// const copiedPerson = {\n//     ...person\n// };\n/***\n * 54\n*/\n// const [hobby1, hobby2, ...remainingHobbies] = hobbies;\n// console.log(hobbies, hobby1, hobby2);\n// const { firstName: userName, age } = person;\n// console.log(userName, age, person);\n/***\n * 50、51\n*/\n// const add = (a: number, b: number = 1) => a + b;\n// const printOutput: (output: string | number) => void = output => {\n//     console.log(output);\n// };\n// // printOutput(add(2));\n// const button = document.querySelector('button');\n// if (button) {\n//     button.addEventListener('click', event => {\n//         console.log(event);\n//     });\n// }\n/***\n * 49\n*/\n// const userName = 'Max';\n// let age = 30;\n// age = 29;\n// function add(a: number, b: number) {\n//     let result;\n//     result = a + b;\n//     return result;\n// }\n// console.log(result);\n// if (age >= 20) {\n//     let isAdult = true;\n// }\n// console.log(isAdult);\n/***\n * 29\n*/\n// function generateError(message: string, code: number): never {\n//     throw { message: message, errorCode: code };\n// }\n// const result = generateError('エラーが発生しました', 500);\n// console.log(result);\n/***\n * 28\n*/\n// let userInput: unknown;\n// let userName: string;\n// userInput = 5;\n// userInput = 'Max';\n// if (typeof userInput === 'string') {\n//     userName = userInput;\n// }\n/***\n * 25, 26\n*/\n// function add(n1: number, n2: number): number {\n//     return n1 + n2;\n// }\n// function printResult(num: number): void {\n//     console.log('Result: ' + num);\n// }\n// let combineValues: (a: number, b: number) => number;\n// combineValues = add;\n// combineValues = 5;\n// combineValues = printResult;\n// console.log(combineValues(8, 8));\n// printResult(add(5, 12));\n// function addAndHandle(n1: number, n2: number, cb: (num: number) => void) {\n//     const result = n1 + n2;\n//     cb(result);\n// }\n// addAndHandle(10, 20, result => {\n//     console.log(result);\n// });\n/***\n * 23\n*/\n// type Combinable = number | string;\n// type ConversionDescriptor = 'as-number' | 'as-text';\n/***\n * 21, 22\n*/\n// function combine(\n//     input1: Combinable,\n//     input2: Combinable,\n//     resultConversion: ConversionDescriptor\n// ) {\n//     let result;\n//     if (typeof input1 === 'number' && typeof input2 === 'number' ||\n//         resultConversion === 'as-number'\n//     ) {\n//         result = +input1 + +input2;\n//     } else {\n//         result = input1.toString() + input2.toString();\n//     }\n//     return result;\n//     // if (resultConversion === 'as-number') {\n//     //     return +result;\n//     // } else {\n//     //     return result.toString();\n//     // }\n// }\n// const combinedAges = combine(30, 26, 'as-number');\n// console.log(combinedAges);\n// const combinedStringAges = combine('30', '26', 'as-number');\n// console.log(combinedStringAges);\n// const combinedNames = combine('Max', 'Anna', 'as-text');\n// console.log(combinedNames);\n/***\n * 19\n*/\n// const ADMIN = 0;\n// const READ_ONLY = 1;\n// const AUTHOR = 2;\n// enum Role {\n//     ADMIN,\n//     READ_ONLY,\n//     AUTHOR\n// }\n// const person = {\n//     name: 'yota',\n//     age: 30,\n//     hobbies: ['Sports', 'Cooking'],\n//     role: Role.ADMIN\n// };\n// if (person.role === Role.ADMIN) {\n//     console.log('管理者ユーザ');\n// }\n/***\n * 15, 17, 18, 20\n*/\n// const person: {\n//     name: string;\n//     age: number;\n//     hobbies: string[];\n//     role: [number, string]\n// } = {\n//     name: 'yota',\n//     age: 30,\n//     hobbies: ['Sports', 'Cooking'],\n//     role: [2, 'author']\n// };\n// person.role.push('admin');\n// person.role[1] = 10;\n// person.role = [0, 'admin', 'user'];\n// console.log(person);\n// let favoriteActivities: string[];\n// favoriteActivities = ['Sports'];\n// for (const hobbies of person.hobbies) {\n//     console.log(hobbies.toUpperCase());\n// }\n/***\n * 10, 11, 12, 13, 14\n*/\n// function add(n1: number, n2: number, showResult: boolean, phrase: string) {\n//     // if (typeof n1 !== 'number' || typeof n2 !== 'number') {\n//     //     throw new Error('入力値が正しくありません');\n//     // }\n//     const result = n1 + n2;\n//     if (showResult) {\n//         return phrase + result;\n//     } else {\n//         return result;\n//     }\n// }\n// let number1;\n// number1 = 5;\n// const number2 = 2.8;\n// const printResult = true;\n// const resultPhrase = 'Result: ';\n// add(number1, number2, printResult, resultPhrase);\n"],"names":[],"sourceRoot":""}