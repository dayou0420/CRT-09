{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://src/./src/app.ts","webpack://src/webpack/before-startup","webpack://src/webpack/startup","webpack://src/webpack/after-startup"],"sourcesContent":["declare var Chart: any;\nenum GeocodingStatus {\n    Active, Finished\n}\nclass Geocoding {\n    constructor(\n        public id: string,\n        public city: string,\n        public main: string,\n        public description: string,\n        public temp: number,\n        public humidity: number,\n        public speed: number,\n        public status: GeocodingStatus\n    ) {}\n}\ntype Listener = (items: Geocoding[]) => void;\nclass GeocodingState {\n    private listeners: Listener[] = [];\n    private geocodings: Geocoding[] = [];\n    private static instance: GeocodingState;\n    private constructor() {\n    }\n    static getInstance() {\n        if (this.instance) {\n            return this.instance;\n        }\n        this.instance = new GeocodingState();\n        return this.instance;\n    }\n    addListener(listenerFn: Listener) {\n        this.listeners.push(listenerFn);\n    }\n    addGeocoding(\n        city: string,\n        main: string,\n        description: string,\n        temp: number,\n        humidity: number,\n        speed: number\n    ) {\n        const newGeocoding = new Geocoding(\n            Math.random().toString(),\n            city,\n            main,\n            description,\n            temp,\n            humidity,\n            speed,\n            GeocodingStatus.Active\n        );\n        this.geocodings.push(newGeocoding);\n        for (const listenerFn of this.listeners) {\n            listenerFn(this.geocodings.slice());\n        }\n    }\n}\nconst geocodingState = GeocodingState.getInstance();\ninterface Validatable {\n    value: string;\n    required: boolean;\n    minLength?: number;\n}\nfunction validate(validatableInput: Validatable) {\n    let isValid = true;\n    if (validatableInput.required) {\n        isValid = isValid && validatableInput.value.toString().trim().length !== 0;\n    }\n    if (validatableInput.minLength != null && typeof validatableInput.value === 'string') {\n        isValid = isValid && validatableInput.value.length >= validatableInput.minLength;\n    }\n    return isValid;\n}\nclass GeocodingList {\n    templateElement: HTMLTemplateElement;\n    hostElement: HTMLDivElement;\n    element: HTMLElement;\n    assignedGeocodings: Geocoding[];\n    constructor(private type: 'active' | 'finished') {\n        this.templateElement = <HTMLTemplateElement>document.getElementById('geocoding-list')!;\n        this.hostElement = <HTMLDivElement>document.getElementById('app')!;\n        this.assignedGeocodings = [];\n        const importedNode = document.importNode(this.templateElement.content, true);\n        this.element = <HTMLElement>importedNode.firstElementChild;\n        this.element.id = `${this.type}-geocodings`;\n        geocodingState.addListener((geocodings: Geocoding[]) => {\n            this.assignedGeocodings = geocodings;\n            this.renderGeocodings();\n        });\n        this.attach();\n        this.renderContent();\n    }\n    private renderGeocodings() {\n        const listEl = <HTMLUListElement>document.getElementById(`${this.type}-geocoding-list`)!;\n        for (const geoItem of this.assignedGeocodings) {\n            const listItem = document.createElement('li');\n            listItem.textContent = geoItem.city;\n            listEl.appendChild(listItem);\n        }\n    }\n    private renderContent() {\n        const listId = `${this.type}-geocoding-list`;\n        this.element.querySelector('ul')!.id = listId;\n        this.element.querySelector('h2')!.textContent =\n            this.type === 'active' ? 'Active Address' : 'Finished Address';\n    }\n    private attach() {\n        this.hostElement.insertAdjacentElement('beforeend', this.element);\n    }\n}\nclass GeocodingInput {\n    templateElement: HTMLTemplateElement;\n    hostElement: HTMLDivElement;\n    element: HTMLFormElement;\n    addressInputElement: HTMLInputElement;\n    constructor(private apiKey: string,) {\n        this.templateElement = <HTMLTemplateElement>document.getElementById('geocoding-input')!;\n        this.hostElement = <HTMLDivElement>document.getElementById('app')!;\n        const importedNode = document.importNode(this.templateElement.content, true);\n        this.element = <HTMLFormElement>importedNode.firstElementChild;\n        this.element.id = 'user-input';\n        this.addressInputElement = <HTMLInputElement>this.element.querySelector('#address')!;\n        this.configure();\n        this.attach();\n    }\n    private getherUserInput(): [string] | void {\n        const enterdAddress = this.addressInputElement.value;\n        const addressValidatable: Validatable = {\n            value: enterdAddress,\n            required: true,\n            minLength: 1\n        }\n        if (!validate(addressValidatable)) {\n            alert('Input value is not valid. Please retry.');\n            return;\n        } else {\n            return [enterdAddress];\n        }\n    }\n    private clearInputs() {\n        this.addressInputElement.value = '';\n    }\n    private submitHandler(event: Event) {\n        event.preventDefault();\n        const userInput = this.getherUserInput();\n        if (Array.isArray(userInput)) {\n            const [address] = userInput;\n        }\n        this.getGeocoding(this.addressInputElement.value)\n            .then(data => {\n                this.getWeather(data.lat, data.lon)\n                    .then(d => {\n                        geocodingState.addGeocoding(d.city, d.main, d.description, d.temp, d.humidity, d.speed);\n                        console.log(d);\n                    })\n                    .catch(e => {\n                        console.log(e.message);\n                    });\n                this.getWeatherForecast(data.lat, data.lon);\n            })\n            .catch(err => {\n                console.log(err.message);\n            });\n        this.clearInputs();\n    }\n    private configure() {\n        this.element.addEventListener('submit', this.submitHandler.bind(this));\n    }\n    private attach() {\n        this.hostElement.insertAdjacentElement('afterbegin', this.element);\n    }\n    private async getGeocoding(address: string) {\n        const body = await fetch(\n            `https://api.openweathermap.org/geo/1.0/direct?q=${address}&limit=5&appid=${\n                this.apiKey\n            }`\n        );\n        const data = await body.json();\n        return {\n            lat: data[0].lat,\n            lon: data[0].lon\n        };\n    }\n    private async getWeather(latitude: number, longitude: number) {\n        const body = await fetch(\n            `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&units=metric&appid=${\n                this.apiKey\n            }`\n        );\n        const data = await body.json();\n        return {\n            city: data.name,\n            main: data.weather[0].main,\n            description: data.weather[0].description,\n            temp: data.main.temp,\n            humidity: data.main.humidity,\n            speed: data.wind.speed\n        }\n    }\n    private async getWeatherForecast(latitude: number, longitude: number) {\n        const body = await fetch(\n            `https://api.openweathermap.org/data/2.5/forecast?lat=${latitude}&lon=${longitude}&units=metric&appid=${\n                this.apiKey\n            }`\n        );\n        const data = await body.json();\n        const time: string[] = data.list.map((m: any) => m.dt_txt);\n        const temp: number[] = data.list.map((m: any) => m.main.temp);\n        const temp_max: number[] = data.list.map((m: any) => m.main.temp_max);\n        const temp_min: number[] = data.list.map((m: any) => m.main.temp_min);\n        const feels_like: number[] = data.list.map((m: any) => m.main.feels_like);\n        const humidity: number[] = data.list.map((m: any) => m.main.humidity);\n        const daily = {\n            labels: time,\n            datasets:\n            [\n                {\n                    label: 'Temperature',\n                    data: temp,\n                    borderColor: 'rgb(75, 192, 192)',\n                    tension: 0.2\n                },\n                {\n                    label: 'Temp Max',\n                    data: temp_max,\n                    borderColor: 'rgb(255, 99, 132)',\n                    tension: 0.2\n                },\n                {\n                    label: 'Temp Min',\n                    data: temp_min,\n                    borderColor: 'rgb(54, 162, 235)',\n                    tension: 0.2\n                },\n                {\n                    label: 'Feels Like',\n                    data: feels_like,\n                    borderColor: 'rgb(255, 159, 64)',\n                    tension: 0.2\n                },\n                {\n                    label: 'Humidity',\n                    data: humidity,\n                    borderColor: 'rgb(153, 102, 255)',\n                    tension: 0.2\n                }\n            ]\n        };\n        new Chart(document.getElementById('daily'), {\n            type: 'line',\n            data: daily\n        });\n    }\n}\nconst API_KEY = '219228b2383f8240a93b11492d102a52';\nconst geoInput = new GeocodingInput(API_KEY);\nconst activeGeo = new GeocodingList('active');\nconst finishedGeo = new GeocodingList('finished');\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = {};\n__webpack_modules__[\"./src/app.ts\"]();\n",""],"names":[],"sourceRoot":""}