{"version":3,"file":"bundle.js","mappings":";;;;;;;AAAA;;EAEE;AACF,MAAM,KAAK,GAAkB,EAAE,CAAC,CAAC,WAAW;AAC5C,uBAAuB;AACvB,MAAM,OAAO,GAAG,IAAI,OAAO,CAAS,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;IACpD,UAAU,CAAC,GAAG,EAAE;QACZ,OAAO,CAAC,SAAS,CAAC,CAAC;IACvB,CAAC,EAAE,IAAI,CAAC,CAAC;AACb,CAAC,CAAC,CAAC;AACH,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;IAChB,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC;AACH;;EAEE;AACF,SAAS,KAAK,CAAO,IAAO,EAAE,IAAO;IACjC,OAAO,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AACrC,CAAC;AACD,MAAM,SAAS,GAAG,KAAK,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,CAAC;AACtD,SAAS,CAAC,GAAG,CAAC","sources":["webpack://src/./src/app.ts"],"sourcesContent":["/***\n * 94\n*/\nconst names: Array<string> = []; // string[]\n// names[0].split(' ');\nconst promise = new Promise<string>((resolve, reject) => {\n    setTimeout(() => {\n        resolve('終わりました！');\n    }, 2000);\n});\npromise.then(data => {\n    data.split(' ');\n});\n/***\n * 95\n*/\nfunction merge<T, U>(objA: T, objB: U) {\n    return Object.assign(objA, objB);\n}\nconst mergedObj = merge({ name: 'Max' }, { age: 30 });\nmergedObj.age;\n"],"names":[],"sourceRoot":""}