{"version":3,"file":"bundle.js","mappings":";;;;;;;AAYsD,CAAC;AACvD,MAAM,KAAK,GAAoB;IAC3B,IAAI,EAAE,OAAO;IACb,IAAI,EAAE,WAAW;IACjB,QAAQ,EAAE,IAAI;CACjB,CAAC;AAIF;;EAEE;AACF,SAAS,WAAW,CAAC,CAAkB;IACnC,IAAI,OAAO,CAAC,KAAK,QAAQ,EAAE;QACvB,OAAO,CAAC,CAAC,WAAW,EAAE,CAAC;KAC1B;IACD,OAAO,EAAE,CAAC;AACd,CAAC;AAED,SAAS,eAAe,CAAC,WAAwB;IAC7C,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IAC9B,IAAI,MAAM,IAAI,WAAW,EAAE;QACvB,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;KACjC;IACD,IAAI,UAAU,IAAI,WAAW,EAAE;QAC3B,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;KACrC;AACL,CAAC;AACD,MAAM,GAAG;IACL,KAAK;QACD,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;IAC3B,CAAC;CACJ;AACD,MAAM,IAAI;IACN,KAAK;QACD,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;IAC/B,CAAC;IACD,GAAG;QACC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;IAC3B,CAAC;CACJ;AAED,SAAS,OAAO,CAAC,GAAQ;IACrB,GAAG,CAAC,KAAK,EAAE,CAAC;IACZ,IAAI,GAAG,YAAY,IAAI,EAAE;QACrB,GAAG,CAAC,GAAG,EAAE,CAAC;KACb;AACL,CAAC;AACD,OAAO,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC","sources":["webpack://src/./src/app.ts"],"sourcesContent":["/***\n * 72\n*/\ninterface Engineer {\n    name: string;\n    role: string;\n}\ninterface Blogger {\n    name: string;\n    follower: number;\n}\n// type EngineerBlogger = Engineer & Blogger;\ninterface EngineerBlogger extends Engineer, Blogger {};\nconst quill: EngineerBlogger = {\n    name: 'Quill',\n    role: 'front-end',\n    follower: 1000\n};\ntype NumberBoolean = number | boolean;\ntype StringNumber = string | number;\ntype Mix = NumberBoolean & StringNumber;\n/***\n * 73\n*/\nfunction toUpperCase(x: string | number) {\n    if (typeof x === 'string') {\n        return x.toUpperCase();\n    }\n    return '';\n}\ntype NomadWorker = Engineer | Blogger;\nfunction describeProfile(nomadWorker: NomadWorker) {\n    console.log(nomadWorker.name);\n    if ('role' in nomadWorker) {\n        console.log(nomadWorker.role);\n    }\n    if ('follower' in nomadWorker) {\n        console.log(nomadWorker.follower);\n    }\n}\nclass Dog {\n    speak() {\n        console.log('bow-wow');\n    }\n}\nclass Bird {\n    speak() {\n        console.log('tweet-tweet');\n    }\n    fly() {\n        console.log('flutter');\n    }\n}\ntype Pet = Dog | Bird;\nfunction havePet(pet: Pet) {\n    pet.speak();\n    if (pet instanceof Bird) {\n        pet.fly();\n    }\n}\nhavePet(new Bird());\n"],"names":[],"sourceRoot":""}