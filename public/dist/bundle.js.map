{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;;;;AASA,IAAK,aAEJ;AAFD,WAAK,aAAa;IACd,qDAAM;IAAE,yDAAQ;AACpB,CAAC,EAFI,aAAa,KAAb,aAAa,QAEjB;AACD,MAAM,OAAO;IACT,YACW,EAAU,EACV,KAAa,EACb,WAAmB,EACnB,MAAc,EACd,MAAqB;QAJrB,OAAE,GAAF,EAAE,CAAQ;QACV,UAAK,GAAL,KAAK,CAAQ;QACb,gBAAW,GAAX,WAAW,CAAQ;QACnB,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAe;IAC7B,CAAC;CACP;AAED,MAAM,KAAK;IAAX;QACc,cAAS,GAAiB,EAAE,CAAC;IAI3C,CAAC;IAHG,WAAW,CAAC,UAAsB;QAC9B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACpC,CAAC;CACJ;AACD,MAAM,YAAa,SAAQ,KAAc;IAGrC;QACI,KAAK,EAAE,CAAC;QAHJ,aAAQ,GAAc,EAAE,CAAC;IAIjC,CAAC;IACD,MAAM,CAAC,WAAW;QACd,IAAI,IAAI,CAAC,QAAQ,EAAE;YACf,OAAO,IAAI,CAAC,QAAQ,CAAC;SACxB;QACD,IAAI,CAAC,QAAQ,GAAG,IAAI,YAAY,EAAE,CAAC;QACnC,OAAO,IAAI,CAAC,QAAQ,CAAC;IACzB,CAAC;IACD,UAAU,CAAC,KAAa,EAAE,WAAmB,EAAE,MAAc;QACzD,MAAM,UAAU,GAAG,IAAI,OAAO,CAC1B,IAAI,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE,EACxB,KAAK,EACL,WAAW,EACX,MAAM,EACN,aAAa,CAAC,MAAM,CACvB,CAAC;QACF,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC/B,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IACD,WAAW,CAAC,SAAiB,EAAE,SAAwB;QACnD,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,KAAK,SAAS,CAAC,CAAC;QAChE,IAAI,OAAO,IAAI,OAAO,CAAC,MAAM,KAAK,SAAS,EAAE;YACzC,OAAO,CAAC,MAAM,GAAG,SAAS,CAAC;YAC3B,IAAI,CAAC,eAAe,EAAE,CAAC;SAC1B;IACL,CAAC;IACO,eAAe;QACnB,KAAK,MAAM,UAAU,IAAI,IAAI,CAAC,SAAS,EAAE;YACrC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC;SACrC;IACL,CAAC;CACJ;AACD,MAAM,YAAY,GAAG,YAAY,CAAC,WAAW,EAAE,CAAC;AAShD,SAAS,QAAQ,CACb,CAAM,EACN,EAAU,EACV,UAA8B;IAE9B,MAAM,cAAc,GAAG,UAAU,CAAC,KAAK,CAAC;IACxC,MAAM,aAAa,GAAuB;QACtC,YAAY,EAAE,IAAI;QAClB,UAAU,EAAE,KAAK;QACjB,GAAG;YACC,MAAM,OAAO,GAAG,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC1C,OAAO,OAAO,CAAC;QACnB,CAAC;KACJ,CAAC;IACF,OAAO,aAAa,CAAC;AACzB,CAAC;AACD,SAAS,QAAQ,CAAC,gBAA6B;IAC3C,IAAI,OAAO,GAAG,IAAI,CAAC;IACnB,IAAI,gBAAgB,CAAC,QAAQ,EAAE;QAC3B,OAAO;YACH,OAAO,IAAI,gBAAgB,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,IAAI,EAAE,CAAC,MAAM,KAAK,CAAC,CAAC;KACxE;IACD,IACI,gBAAgB,CAAC,SAAS,IAAI,IAAI;QAClC,OAAO,gBAAgB,CAAC,KAAK,KAAK,QAAQ,EAC5C;QACE,OAAO;YACH,OAAO,IAAI,gBAAgB,CAAC,KAAK,CAAC,MAAM,IAAI,gBAAgB,CAAC,SAAS,CAAC;KAC9E;IACD,IACI,gBAAgB,CAAC,SAAS,IAAI,IAAI;QAClC,OAAO,gBAAgB,CAAC,KAAK,KAAK,QAAQ,EAC5C;QACE,OAAO;YACH,OAAO,IAAI,gBAAgB,CAAC,KAAK,CAAC,MAAM,IAAI,gBAAgB,CAAC,SAAS,CAAC;KAC9E;IACD,IACI,gBAAgB,CAAC,GAAG,IAAI,IAAI;QAC5B,OAAO,gBAAgB,CAAC,KAAK,KAAK,QAAQ,EAC5C;QACE,OAAO;YACH,OAAO,IAAI,gBAAgB,CAAC,KAAK,IAAI,gBAAgB,CAAC,GAAG,CAAC;KACjE;IACD,IACI,gBAAgB,CAAC,GAAG,IAAI,IAAI;QAC5B,OAAO,gBAAgB,CAAC,KAAK,KAAK,QAAQ,EAC5C;QACE,OAAO;YACH,OAAO,IAAI,gBAAgB,CAAC,KAAK,IAAI,gBAAgB,CAAC,GAAG,CAAC;KACjE;IACD,OAAO,OAAO,CAAC;AACnB,CAAC;AACD,MAAe,SAAS;IAIpB,YACI,WAAmB,EACnB,aAAqB,EACrB,aAAsB,EACtB,YAAqB;QAErB,IAAI,CAAC,eAAe,GAAG,QAAQ,CAAC,cAAc,CAC1C,WAAW,CACU,CAAC;QAC1B,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,cAAc,CACtC,aAAa,CACV,CAAC;QACR,MAAM,YAAY,GAAG,QAAQ,CAAC,UAAU,CACpC,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,IAAI,CACrC,CAAC;QACF,IAAI,CAAC,OAAO,GAAG,YAAY,CAAC,iBAAsB,CAAC;QACnD,IAAI,YAAY,EAAE;YACd,IAAI,CAAC,OAAO,CAAC,EAAE,GAAG,YAAY,CAAC;SAClC;QACD,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;IAC/B,CAAC;IAGO,MAAM,CAAC,iBAA0B;QACrC,IAAI,CAAC,WAAW,CAAC,qBAAqB,CAClC,iBAAiB,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,WAAW,EAC9C,IAAI,CAAC,OAAO,CACf,CAAC;IACN,CAAC;CACJ;AACD,MAAM,WAAY,SAAQ,SAA0C;IAUhE,YAAY,MAAc,EAAE,OAAgB;QACxC,KAAK,CAAC,gBAAgB,EAAE,MAAM,EAAE,KAAK,EAAE,OAAO,CAAC,EAAE,CAAC,CAAC;QACnD,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,aAAa,EAAE,CAAC;IACzB,CAAC;IAZD,IAAI,MAAM;QACN,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,EAAE,EAAE;YAC1B,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,EAAE,GAAG,SAAS,CAAC;SACrD;aAAM;YACH,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,EAAE,CAAC,CAAC,QAAQ,EAAE,GAAG,WAAW,CAAC;SAC9D;IACL,CAAC;IAQD,gBAAgB,CAAC,KAAgB;QAC7B,KAAK,CAAC,YAAa,CAAC,OAAO,CAAC,YAAY,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QAC3D,KAAK,CAAC,YAAa,CAAC,aAAa,GAAG,MAAM,CAAC;IAC/C,CAAC;IACD,cAAc,CAAC,CAAY;IAC3B,CAAC;IACD,SAAS;QACL,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,WAAW,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAClE,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;IAClE,CAAC;IACD,aAAa;QACT,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,CAAE,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;QACnE,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,CAAE,CAAC,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC;QAC5D,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,GAAG,CAAE,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC;IAC5E,CAAC;CACJ;AAfG;IADC,QAAQ;mDAIR;AAaL,MAAM,WAAY,SAAQ,SAAsC;IAE5D,YAAoB,IAA2B;QAC3C,KAAK,CAAC,cAAc,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,IAAI,WAAW,CAAC,CAAC;QADxC,SAAI,GAAJ,IAAI,CAAuB;QAE3C,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;QAC3B,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,aAAa,EAAE,CAAC;IACzB,CAAC;IAED,eAAe,CAAC,KAAgB;QAC5B,IAAI,KAAK,CAAC,YAAY,IAAI,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,YAAY,EAAE;YACpE,KAAK,CAAC,cAAc,EAAE,CAAC;YACvB,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,CAAE,CAAC;YACjD,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;SACrC;IACL,CAAC;IAED,WAAW,CAAC,KAAgB;QACxB,MAAM,KAAK,GAAG,KAAK,CAAC,YAAa,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;QACxD,YAAY,CAAC,WAAW,CACpB,KAAK,EACL,IAAI,CAAC,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,aAAa,CAAC,QAAQ,CACzE,CAAC;IACN,CAAC;IAED,gBAAgB,CAAC,CAAY;QACzB,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,CAAE,CAAC;QACjD,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;IACzC,CAAC;IACD,SAAS;QACL,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,UAAU,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;QAChE,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;QACxD,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,WAAW,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAClE,YAAY,CAAC,WAAW,CAAC,CAAC,QAAmB,EAAE,EAAE;YAC7C,MAAM,gBAAgB,GAAG,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE;gBAC3C,IAAI,IAAI,CAAC,IAAI,KAAK,QAAQ,EAAE;oBACxB,OAAO,GAAG,CAAC,MAAM,KAAK,aAAa,CAAC,MAAM,CAAC;iBAC9C;gBACD,OAAO,GAAG,CAAC,MAAM,KAAK,aAAa,CAAC,QAAQ,CAAC;YACjD,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;YACzC,IAAI,CAAC,cAAc,EAAE,CAAC;QAC1B,CAAC,CAAC,CAAC;IACP,CAAC;IACD,aAAa;QACT,MAAM,MAAM,GAAG,GAAG,IAAI,CAAC,IAAI,gBAAgB,CAAC;QAC5C,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,CAAE,CAAC,EAAE,GAAG,MAAM,CAAC;QAC9C,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,CAAE,CAAC,WAAW;YACzC,IAAI,CAAC,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,gBAAgB,EAAC,CAAC,gBAAgB,CAAC;IACpE,CAAC;IACO,cAAc;QAClB,MAAM,MAAM,GAAG,QAAQ,CAAC,cAAc,CAClC,GAAG,IAAI,CAAC,IAAI,gBAAgB,CACV,CAAC;QACvB,MAAM,CAAC,SAAS,GAAG,EAAE,CAAC;QACtB,KAAK,MAAM,OAAO,IAAI,IAAI,CAAC,gBAAgB,EAAE;YACzC,IAAI,WAAW,CAAC,MAAM,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC;SACvC;IACL,CAAC;CACJ;AAlDG;IADC,QAAQ;kDAOR;AAED;IADC,QAAQ;8CAOR;AAED;IADC,QAAQ;mDAIR;AAgCL,MAAM,YAAa,SAAQ,SAA0C;IAIjE;QACI,KAAK,CAAC,eAAe,EAAE,KAAK,EAAE,IAAI,EAAE,YAAY,CAAC,CAAC;QAClD,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAC/C,QAAQ,CACS,CAAC;QACtB,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CACrD,cAAc,CACG,CAAC;QACtB,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAChD,SAAS,CACQ,CAAC;QACtB,IAAI,CAAC,SAAS,EAAE,CAAC;IACrB,CAAC;IACD,SAAS;QACL,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;IAChE,CAAC;IACD,aAAa;IACb,CAAC;IACO,eAAe;QACnB,MAAM,YAAY,GAAG,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC;QAClD,MAAM,kBAAkB,GAAG,IAAI,CAAC,uBAAuB,CAAC,KAAK,CAAC;QAC9D,MAAM,aAAa,GAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC;QACpD,MAAM,gBAAgB,GAAgB;YAClC,KAAK,EAAE,YAAY;YACnB,QAAQ,EAAE,IAAI;SACjB,CAAC;QACF,MAAM,sBAAsB,GAAgB;YACxC,KAAK,EAAE,kBAAkB;YACzB,QAAQ,EAAE,IAAI;YACd,SAAS,EAAE,CAAC;SACf,CAAC;QACF,MAAM,iBAAiB,GAAgB;YACnC,KAAK,EAAE,CAAC,aAAa;YACrB,QAAQ,EAAE,IAAI;YACd,GAAG,EAAE,CAAC;YACN,GAAG,EAAE,IAAI;SACZ,CAAC;QACF,IACI,CAAC,QAAQ,CAAC,gBAAgB,CAAC;YAC3B,CAAC,QAAQ,CAAC,sBAAsB,CAAC;YACjC,CAAC,QAAQ,CAAC,iBAAiB,CAAC,EAC9B;YACE,KAAK,CAAC,kCAAkC,CAAC,CAAC;YAC1C,OAAO;SACV;aAAM;YACH,OAAO,CAAC,YAAY,EAAE,kBAAkB,EAAE,CAAC,aAAa,CAAC,CAAC;SAC7D;IACL,CAAC;IACO,WAAW;QACf,IAAI,CAAC,iBAAiB,CAAC,KAAK,GAAG,EAAE,CAAC;QAClC,IAAI,CAAC,uBAAuB,CAAC,KAAK,GAAG,EAAE,CAAC;QACxC,IAAI,CAAC,kBAAkB,CAAC,KAAK,GAAG,EAAE,CAAC;IACvC,CAAC;IAEO,aAAa,CAAC,KAAY;QAC9B,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,MAAM,SAAS,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;QACzC,IAAI,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE;YAC1B,MAAM,CAAC,KAAK,EAAE,IAAI,EAAE,MAAM,CAAC,GAAG,SAAS,CAAC;YACxC,YAAY,CAAC,UAAU,CAAC,KAAK,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;YAC7C,IAAI,CAAC,WAAW,EAAE,CAAC;SACtB;IACL,CAAC;CACJ;AATG;IADC,QAAQ;iDASR;AAEL,MAAM,QAAQ,GAAG,IAAI,YAAY,EAAE,CAAC;AACpC,MAAM,aAAa,GAAG,IAAI,WAAW,CAAC,QAAQ,CAAC,CAAC;AAChD,MAAM,eAAe,GAAG,IAAI,WAAW,CAAC,UAAU,CAAC,CAAC;;;;;;;;UEnUpD;UACA;UACA;UACA;UACA","sources":["webpack://src/./src/app.ts","webpack://src/webpack/before-startup","webpack://src/webpack/startup","webpack://src/webpack/after-startup"],"sourcesContent":["interface Draggable {\n    dragStartHandler(event: DragEvent): void;\n    dragEndHandler(event: DragEvent): void;\n}\ninterface DragTarget {\n    dragOverHandler(event: DragEvent): void;\n    dropHandler(event: DragEvent): void;\n    dragLeaveHandler(event: DragEvent): void;\n}\nenum ProjectStatus {\n    Active, Finished\n}\nclass Project {\n    constructor(\n        public id: string,\n        public title: string,\n        public description: string,\n        public manday: number,\n        public status: ProjectStatus\n    ) {}\n}\ntype Listner<T> = (items: T[]) => void;\nclass State<T> {\n    protected listeners: Listner<T>[] = [];\n    addListener(listenerFn: Listner<T>) {\n        this.listeners.push(listenerFn);\n    }\n}\nclass ProjectState extends State<Project> {\n    private projects: Project[] = [];\n    private static instance: ProjectState;\n    private constructor() {\n        super();\n    }\n    static getInstance() {\n        if (this.instance) {\n            return this.instance;\n        }\n        this.instance = new ProjectState();\n        return this.instance;\n    }\n    addProject(title: string, description: string, manday: number) {\n        const newProject = new Project(\n            Math.random().toString(),\n            title,\n            description,\n            manday,\n            ProjectStatus.Active\n        );\n        this.projects.push(newProject);\n        this.updateListeners();\n    }\n    moveProject(projectId: string, newStatus: ProjectStatus) {\n        const project = this.projects.find(prj => prj.id === projectId);\n        if (project && project.status !== newStatus) {\n            project.status = newStatus;\n            this.updateListeners();\n        }\n    }\n    private updateListeners() {\n        for (const listenerFn of this.listeners) {\n            listenerFn(this.projects.slice());\n        }\n    }\n}\nconst projectState = ProjectState.getInstance();\ninterface Validatable {\n    value: string | number;\n    required?: boolean;\n    minLength?: number;\n    maxLength?: number;\n    min?: number;\n    max?: number;\n}\nfunction autobind(\n    _: any,\n    _2: string,\n    descriptor: PropertyDescriptor\n) {\n    const originalMethod = descriptor.value;\n    const adjDescriptor: PropertyDescriptor = {\n        configurable: true,\n        enumerable: false,\n        get() {\n            const boundFn = originalMethod.bind(this);\n            return boundFn;\n        },\n    };\n    return adjDescriptor;\n}\nfunction validate(validatableInput: Validatable) {\n    let isValid = true;\n    if (validatableInput.required) {\n        isValid =\n            isValid && validatableInput.value.toString().trim().length !== 0;\n    }\n    if (\n        validatableInput.minLength != null &&\n        typeof validatableInput.value === 'string'\n    ) {\n        isValid =\n            isValid && validatableInput.value.length >= validatableInput.minLength;\n    }\n    if (\n        validatableInput.maxLength != null &&\n        typeof validatableInput.value === 'string'\n    ) {\n        isValid =\n            isValid && validatableInput.value.length <= validatableInput.maxLength;\n    }\n    if (\n        validatableInput.min != null &&\n        typeof validatableInput.value === 'number'\n    ) {\n        isValid =\n            isValid && validatableInput.value >= validatableInput.min;\n    }\n    if (\n        validatableInput.max != null &&\n        typeof validatableInput.value === 'number'\n    ) {\n        isValid =\n            isValid && validatableInput.value <= validatableInput.max;\n    }\n    return isValid;\n}\nabstract class Component<T extends HTMLElement, U extends HTMLElement> {\n    templateElement: HTMLTemplateElement;\n    hostElement: T;\n    element: U;\n    constructor(\n        templatedId: string,\n        hostElementId: string,\n        insertAtStart: boolean,\n        newElementId?: string\n    ) {\n        this.templateElement = document.getElementById(\n            templatedId\n        )! as HTMLTemplateElement;\n        this.hostElement = document.getElementById(\n            hostElementId\n        )! as T;\n        const importedNode = document.importNode(\n            this.templateElement.content, true\n        );\n        this.element = importedNode.firstElementChild as U;\n        if (newElementId) {\n            this.element.id = newElementId;\n        }\n        this.attach(insertAtStart);\n    }\n    abstract configure(): void;\n    abstract renderContent(): void;\n    private attach(insertAtBeginning: boolean) {\n        this.hostElement.insertAdjacentElement(\n            insertAtBeginning ? 'afterbegin' : 'beforeend',\n            this.element\n        );\n    }\n}\nclass ProjectItem extends Component<HTMLUListElement, HTMLLIElement>\n    implements Draggable {\n    private project: Project;\n    get manday() {\n        if (this.project.manday < 20) {\n            return this.project.manday.toString() + 'Man Day';\n        } else {\n            return (this.project.manday / 20).toString() + 'Man Month';\n        }\n    }\n    constructor(hostId: string, project: Project) {\n        super('single-project', hostId, false, project.id);\n        this.project = project;\n        this.configure();\n        this.renderContent();\n    }\n    @autobind\n    dragStartHandler(event: DragEvent) {\n        event.dataTransfer!.setData('text/plain', this.project.id);\n        event.dataTransfer!.effectAllowed = 'move';\n    }\n    dragEndHandler(_: DragEvent) {\n    }\n    configure() {\n        this.element.addEventListener('dragstart', this.dragStartHandler);\n        this.element.addEventListener('dragend', this.dragEndHandler);\n    }\n    renderContent() {\n        this.element.querySelector('h2')!.textContent = this.project.title;\n        this.element.querySelector('h3')!.textContent = this.manday;\n        this.element.querySelector('p')!.textContent = this.project.description;\n    }\n}\nclass ProjectList extends Component<HTMLDivElement, HTMLElement> implements DragTarget {\n    assignedProjects: Project[];\n    constructor(private type: 'active' | 'finished') {\n        super('project-list', 'app', false, `${type}-projects`);\n        this.assignedProjects = [];\n        this.configure();\n        this.renderContent();\n    }\n    @autobind\n    dragOverHandler(event: DragEvent) {\n        if (event.dataTransfer && event.dataTransfer.types[0] === 'text/plain') {\n            event.preventDefault();\n            const listEl = this.element.querySelector('ul')!;\n            listEl.classList.add('droppable');\n        }\n    }\n    @autobind\n    dropHandler(event: DragEvent) {\n        const prjId = event.dataTransfer!.getData('text/plain');\n        projectState.moveProject(\n            prjId,\n            this.type === 'active' ? ProjectStatus.Active : ProjectStatus.Finished\n        );\n    }\n    @autobind\n    dragLeaveHandler(_: DragEvent) {\n        const listEl = this.element.querySelector('ul')!;\n        listEl.classList.remove('droppable');\n    }\n    configure() {\n        this.element.addEventListener('dragover', this.dragOverHandler);\n        this.element.addEventListener('drop', this.dropHandler);\n        this.element.addEventListener('dragleave', this.dragLeaveHandler);\n        projectState.addListener((projects: Project[]) => {\n            const relevantProjects = projects.filter(prj => {\n                if (this.type === 'active') {\n                    return prj.status === ProjectStatus.Active;\n                }\n                return prj.status === ProjectStatus.Finished;\n            });\n            this.assignedProjects = relevantProjects;\n            this.renderProjects();\n        });\n    }\n    renderContent() {\n        const listId = `${this.type}-projects-list`;\n        this.element.querySelector('ul')!.id = listId;\n        this.element.querySelector('h2')!.textContent =\n            this.type === 'active' ? 'Active Project': 'Finish Project';\n    }\n    private renderProjects() {\n        const listEl = document.getElementById(\n            `${this.type}-projects-list`\n        )! as HTMLUListElement;\n        listEl.innerHTML = '';\n        for (const prjItem of this.assignedProjects) {\n            new ProjectItem(listEl.id, prjItem);\n        }\n    }\n}\nclass ProjectInput extends Component<HTMLDivElement, HTMLFormElement> {\n    titleInputElement: HTMLInputElement;\n    descriptionInputElement: HTMLInputElement;\n    mandayInputElement: HTMLInputElement;\n    constructor() {\n        super('project-input', 'app', true, 'user-input');\n        this.titleInputElement = this.element.querySelector(\n            '#title'\n        ) as HTMLInputElement;\n        this.descriptionInputElement = this.element.querySelector(\n            '#description'\n        ) as HTMLInputElement;\n        this.mandayInputElement = this.element.querySelector(\n            '#manday'\n        ) as HTMLInputElement;\n        this.configure();\n    }\n    configure() {\n        this.element.addEventListener('submit', this.submitHandler);\n    }\n    renderContent() {\n    }\n    private gatherUserInput(): [string, string, number] | void {\n        const enteredTitle = this.titleInputElement.value;\n        const enteredDescription = this.descriptionInputElement.value;\n        const enteredManday = this.mandayInputElement.value;\n        const titleValidatable: Validatable = {\n            value: enteredTitle,\n            required: true\n        };\n        const descriptionValidatable: Validatable = {\n            value: enteredDescription,\n            required: true,\n            minLength: 5\n        };\n        const mandayValidatable: Validatable = {\n            value: +enteredManday,\n            required: true,\n            min: 1,\n            max: 1000\n        };\n        if (\n            !validate(titleValidatable) ||\n            !validate(descriptionValidatable) ||\n            !validate(mandayValidatable)\n        ) {\n            alert('Input is not Valid.Please retry.');\n            return;\n        } else {\n            return [enteredTitle, enteredDescription, +enteredManday];\n        }\n    }\n    private clearInputs() {\n        this.titleInputElement.value = '';\n        this.descriptionInputElement.value = '';\n        this.mandayInputElement.value = '';\n    }\n    @autobind\n    private submitHandler(event: Event) {\n        event.preventDefault();\n        const userInput = this.gatherUserInput();\n        if (Array.isArray(userInput)) {\n            const [title, desc, manday] = userInput;\n            projectState.addProject(title, desc, manday);\n            this.clearInputs();\n        }\n    }\n}\nconst prjInput = new ProjectInput();\nconst activePrjList = new ProjectList('active');\nconst finishedPrjList = new ProjectList('finished');\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = {};\n__webpack_modules__[\"./src/app.ts\"]();\n",""],"names":[],"sourceRoot":""}