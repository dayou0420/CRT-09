{"version":3,"file":"bundle.js","mappings":";;;;;;;AAaA,MAAM,EAAE,GAAoB;IACxB,IAAI,EAAE,KAAK;IACX,UAAU,EAAE,CAAC,eAAe,CAAC;IAC7B,SAAS,EAAE,IAAI,IAAI,EAAE;CACxB;AAQD,SAAS,GAAG,CAAC,CAAa,EAAE,CAAa;IACrC,IAAI,OAAO,CAAC,KAAK,QAAQ,IAAI,OAAO,CAAC,KAAK,QAAQ,EAAE;QAChD,OAAO,CAAC,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC;KACtC;IACD,OAAO,CAAC,GAAG,CAAC,CAAC;AACjB,CAAC;AACD;;EAEE;AACF,MAAM,MAAM,GAAG,GAAG,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;AAC1C,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AAElB,SAAS,wBAAwB,CAAC,GAAmB;IACjD,yBAAyB;IACzB,IAAI,YAAY,IAAI,GAAG,EAAE;QACrB,gDAAgD;KACnD;IACD,IAAI,WAAW,IAAI,GAAG,EAAE;QACpB,8CAA8C;KACjD;AACL,CAAC;AACD,wBAAwB,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,IAAI,IAAI,EAAE,EAAE,CAAC,CAAC;AAClE,MAAM,GAAG;IACL,KAAK;QACD,yBAAyB;IAC7B,CAAC;CACJ;AACD,MAAM,KAAK;IACP,KAAK;QACD,8BAA8B;IAClC,CAAC;IACD,SAAS,CAAC,MAAc;QACpB,wCAAwC;IAC5C,CAAC;CACJ;AAED,MAAM,EAAE,GAAG,IAAI,GAAG,EAAE,CAAC;AACrB,MAAM,EAAE,GAAG,IAAI,KAAK,EAAE,CAAC;AACvB,SAAS,UAAU,CAAC,OAAgB;IAChC,OAAO,CAAC,KAAK,EAAE,CAAC;IAChB,IAAI,OAAO,YAAY,KAAK,EAAE;QAC1B,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;KAC3B;AACL,CAAC;AACD,UAAU,CAAC,EAAE,CAAC,CAAC;AACf,UAAU,CAAC,EAAE,CAAC,CAAC;AAaf,SAAS,UAAU,CAAC,MAAc;IAC9B,IAAI,KAAK,CAAC;IACV,QAAQ,MAAM,CAAC,IAAI,EAAE;QACjB,KAAK,MAAM;YACP,KAAK,GAAG,MAAM,CAAC,WAAW,CAAC;YAC3B,MAAM;QACV,KAAK,OAAO;YACR,KAAK,GAAG,MAAM,CAAC,YAAY,CAAC;KACnC;IACD,iCAAiC;AACrC,CAAC;AACD,UAAU,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,WAAW,EAAE,EAAE,EAAE,CAAC;AAC7C;;EAEE;AACF,qFAAqF;AACrF,MAAM,gBAAgB,GAAG,QAAQ,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;AAC/D,IAAI,gBAAgB,EAAE;IACjB,gBAAqC,CAAC,KAAK,GAAG,OAAO,CAAC;CAC1D;AAOD,MAAM,QAAQ,GAAmB;IAC7B,KAAK,EAAE,mBAAmB;IAC1B,QAAQ,EAAE,qBAAqB;CAClC,CAAC","sources":["webpack://src/./src/app.ts"],"sourcesContent":["/***\n * 83, 84\n*/\ntype Admin = {\n    name: string;\n    privileges: string[];\n}\ntype Employee = {\n    name: string;\n    startDate: Date;\n}\n// interface ElevatedEmploee extends Employee, Admin {};\ntype ElevatedEmploee = Admin & Employee;\nconst e1: ElevatedEmploee = {\n    name: 'Max',\n    privileges: ['create-server'],\n    startDate: new Date()\n}\ntype Combinable = string | number;\ntype Numeric = number | boolean;\ntype Universal = Combinable & Numeric;\nfunction add(a: number, b: number): number;\nfunction add(a: string, b: string): string;\nfunction add(a: string, b: number): string;\nfunction add(a: number, b: string): string;\nfunction add(a: Combinable, b: Combinable) {\n    if (typeof a === 'string' || typeof b === 'string') {\n        return a.toString() + b.toString();\n    }\n    return a + b;\n}\n/***\n * 88\n*/\nconst result = add('Hello', 'TypeScript');\nresult.split(' ');\ntype UnknowEmployee = Employee | Admin;\nfunction printEmployeeInformation(emp: UnknowEmployee) {\n    // console.log(emp.name);\n    if ('privileges' in emp) {\n        // console.log('Privileges: ' + emp.privileges);\n    }\n    if ('startDate' in emp) {\n        // console.log('StartDate: ' + emp.startDate);\n    }\n}\nprintEmployeeInformation({ name: 'Manu', startDate: new Date() });\nclass Car {\n    drive() {\n        // console.log('運転中...');\n    }\n}\nclass Truck {\n    drive() {\n        // console.log('トラックを運転中...');\n    }\n    loadCargo(amount: number) {\n        // console.log('荷物を載せています ...' + amount)\n    }\n}\ntype Vehicle = Car | Truck;\nconst v1 = new Car();\nconst v2 = new Truck();\nfunction useVehicle(vehicle: Vehicle) {\n    vehicle.drive();\n    if (vehicle instanceof Truck) {\n        vehicle.loadCargo(1000);\n    }\n}\nuseVehicle(v1);\nuseVehicle(v2);\n/***\n * 85\n*/\ninterface Bird {\n    type: 'bird';\n    flyingSpeed: number;\n}\ninterface Horse {\n    type: 'horse';\n    runningSpeed: number;\n}\ntype Animal = Bird | Horse;\nfunction moveAnimal(animal: Animal) {\n    let speed;\n    switch (animal.type) {\n        case 'bird':\n            speed = animal.flyingSpeed;\n            break;\n        case 'horse':\n            speed = animal.runningSpeed;\n    }\n    // console.log('移動速度: ' + speed);\n}\nmoveAnimal({ type: 'bird', flyingSpeed: 10 })\n/***\n * 86\n*/\n// const userInputElement = <HTMLInputElement>document.getElementById(\"user-input\")!;\nconst userInputElement = document.getElementById(\"user-input\");\nif (userInputElement) {\n    (userInputElement as HTMLInputElement).value = 'こんにちは';\n}\n/***\n * 87\n*/\ninterface ErrorContainer { // { email: '正しいメールアドレスではありません', username: 'ユーザ名に記号を含めることはできません' }\n    [prop: string]: string;\n}\nconst errorBag: ErrorContainer = {\n    email: '正しいメールアドレスではありません',\n    username: 'ユーザ名に記号を含めることはできません'\n};\n"],"names":[],"sourceRoot":""}